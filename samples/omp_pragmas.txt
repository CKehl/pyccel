Python :
  #$ omp parallel
  #$ omp end parallel
C :
  #pragma omp parallel
  structured-block
F :
  !$omp parallel
  !$omp end parallel
--------------------------
Python :
  #$ omp parallel
  #$ omp end parallel
C :
  #pragma omp parallel
  structured-block
F :
  !$omp parallel
  !$omp end parallel
--------------------------
Python :
  #$ omp for
  #$ omp end for
C :
  #pragma omp for
  structured-block
F :
  !$omp do
  !$omp end do
--------------------------
Python :
  #$ omp metadirective
  - or -
  #$ omp begin metadirective
  #$ omp end metadirective
C :
  #pragma omp metadirective
  - or -
  #pragma omp begin metadirective
  #pragma omp end metadirective
F :
  !$omp metadirective
  - or -
  !$omp begin metadirective
  !$omp end metadirective
--------------------------
Parallel Worksharing-Loop SIMD
--------------------------
Python :
  #$ omp parallel for simd
  #$ omp end parallel for simd ? Optional
C :
  #pragma omp parallel for simd
    for-loops
F :
  !$omp parallel do simd
    do-loops
  [ !$omp end parallel do simd ]
--------------------------
Python :
  #$ omp parallel master
  #$ omp end parallel master
C :
  #pragma omp parallel master
    structured-block
F :
  !$omp parallel master
    structured-block
  !$omp end parallel master
--------------------------
Python :
  #$ omp master taskloop
  #$ omp end master taskloop ? Optional
C :
  #pragma omp master taskloop
    for-loops
F :
  !$omp master taskloop
    for-loops
  [ !$omp end master taskloop ]

--------------------------
Python :
  #$ omp master taskloop simd
  #$ omp end master taskloop simd ? Optional
C :
  #pragma omp master taskloop simd
    for-loops
F :
  !$omp master taskloop simd
    for-loops
  [ !$omp end master taskloop simd ]
--------------------------
Python :
  #$ omp parallel master taskloop
  #$ omp end parallel master taskloop ? Optional
C :
  #pragma omp parallel master taskloop
    for-loops
F :
  !$omp parallel master taskloop
    for-loops
  [ !$omp end parallel master taskloop ]
--------------------------
Python :
  #$ omp parallel master taskloop simd
  #$ omp end parallel master taskloop simd ? Optional
C :
  #pragma omp parallel master taskloop simd
    for-loops
F :
  !$omp parallel master taskloop simd
    for-loops
  [ !$omp end parallel master taskloop simd ]
--------------------------
--------------------------
Python :
  #$ omp teams distribute
  #$ omp end teams distribute ? Optional
C :
  #pragma omp teams distribute
    for-loops
F :
  !$omp teams distribute
    do-loops
  [ !$omp end teams distribute ]
--------------------------
Python :
  #$ omp target parallel for
  #$ omp end target parallel for ? Optional
C :
  #pragma omp target parallel for
    for-loops
F :
  !$omp target parallel do
    do-loops
  [ !$omp end target parallel do ]
--------------------------
Python :
  #$ omp teams distribute simd
  #$ omp end teams distribute simd ? Optional
C :
  #pragma omp teams distribute simd
    for-loops
F :
  !$omp teams distribute simd
    for-loops
  [ !$omp end teams distribute simd ]
--------------------------
Python :
  #$ omp target parallel for simd
  #$ omp end target parallel for simd ? Optional
C :
  #pragma omp target parallel for simd
    for-loops
F :
  !$omp target parallel do simd
    for-loops
  [ !$omp end target parallel do simd ]
--------------------------
Python :
  #$ omp target parallel for simd
  #$ omp end target parallel for simd ? Optional
C :
  #pragma omp target parallel for simd
    for-loops
F :
  !$omp target parallel do simd
    for-loops
  [ !$omp end target parallel do simd ]
--------------------------
